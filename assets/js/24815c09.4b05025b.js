"use strict";(self.webpackChunkpush_website=self.webpackChunkpush_website||[]).push([[98886],{757733:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var t=i(785893),d=i(511151);i(23734);const o={id:"docs-video-develop-handle-incoming-video-call",title:"Handle Incoming Video Call",hide_title:!0,slug:"./handle-incoming-video-call",displayed_sidebar:"pushVideoSidebar",sidebar_position:6,image:"/assets/docs/previews/docs_video_develop--handle_incoming_video_call.png"},l="Accepting a video call",a={id:"video/build/docs-video-develop-handle-incoming-video-call",title:"Handle Incoming Video Call",description:"This section covers everything you need to know about handling an incoming call.",source:"@site/docs/video/01-build/06-Develop-Handle-Incoming-Video-Call.mdx",sourceDirName:"video/01-build",slug:"/video/build/handle-incoming-video-call",permalink:"/docs/video/build/handle-incoming-video-call",draft:!1,unlisted:!1,editUrl:"https://github.com/ethereum-push-notification-service/push-website/blob/main/docs/video/01-build/06-Develop-Handle-Incoming-Video-Call.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{id:"docs-video-develop-handle-incoming-video-call",title:"Handle Incoming Video Call",hide_title:!0,slug:"./handle-incoming-video-call",displayed_sidebar:"pushVideoSidebar",sidebar_position:6,image:"/assets/docs/previews/docs_video_develop--handle_incoming_video_call.png"},sidebar:"pushVideoSidebar",previous:{title:"Request a Video Call",permalink:"/docs/video/build/request-a-video-call"},next:{title:"End an Ongoing Video Call",permalink:"/docs/video/build/end-an-ongoing-video-call"}},s={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Handling Incoming Video Call",id:"handling-incoming-video-call",level:2},{value:"Accepting an Video Call",id:"accepting-an-video-call",level:3},{value:"Rejecting an Video Call",id:"rejecting-an-video-call",level:3},{value:"Understanding the <code>peerInfo</code> object",id:"understanding-the-peerinfo-object",level:3}];function r(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.a)(),...e.components},{Head:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"accepting-a-video-call",children:"Accepting a video call"}),"\n",(0,t.jsx)(n.p,{children:"This section covers everything you need to know about handling an incoming call."}),"\n",(0,t.jsx)(i,{children:(0,t.jsx)("title",{children:"Handle Incoming Video Call | Push Video | Push Documentation"})}),"\n","\n","\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You have initialized Push Video API. Please refer to the ",(0,t.jsx)(n.a,{href:"../initializing-video-api",children:"Initializing Video API"})," section for more details."]}),"\n",(0,t.jsxs)(n.li,{children:["You are listening to Video Stream events, Please refer to the ",(0,t.jsx)(n.a,{href:"../stream-video",children:"Stream API"})," section for more details."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"handling-incoming-video-call",children:"Handling Incoming Video Call"}),"\n",(0,t.jsxs)(n.p,{children:["Earlier, we set up the Push Video Stream and event listeners in the ",(0,t.jsx)(n.a,{href:"../stream-video",children:"Stream API"})," section. Now, when there is an incoming video call request, the ",(0,t.jsx)(n.code,{children:"stream"})," emits a ",(0,t.jsx)(n.code,{children:"RequestVideo"})," event. This event can be used to display a UI modal to the user, allowing them to accept or deny the incoming call."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"stream.on(CONSTANTS.STREAM.VIDEO, async (data) => {\n  if (data.event === CONSTANTS.VIDEO.EVENT.REQUEST) {\n    // RequestVideo Event is fired when there is an incoming video call request\n    // store this data.peerInfo which will be used to accept/reject the call\n    peerInfo = data.peerInfo;\n  }\n  // other events\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"accepting-an-video-call",children:"Accepting an Video Call"}),"\n",(0,t.jsxs)(n.p,{children:["When a user receives an incoming video call request, it needs to be approved by the user before the call can be established. To approve an incoming video call request, we call the ",(0,t.jsx)(n.code,{children:"approve()"})," method and pass the received ",(0,t.jsx)(n.code,{children:"peerInfo"})," data from the stream event."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// aliceVideoCall.approve(peerInfo);\nawait aliceVideoCall.approve(peerInfo);\n"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.code,{children:"peerInfo"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"object"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"PeerInfo"})," Object received from the stream event in the Push Stream."]})]})})]}),"\n",(0,t.jsx)(n.admonition,{type:"success",children:(0,t.jsx)(n.p,{children:"Once the user approves the call, the video call is then established. \ud83c\udf89"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["When a user approves an incoming video call request, on the call intiator's end, the stream emits ",(0,t.jsx)(n.code,{children:"ApproveVideo"})," event. We can use this event to show an UI Toast to the initiator that the call has been approved."]})}),"\n",(0,t.jsx)(n.h3,{id:"rejecting-an-video-call",children:"Rejecting an Video Call"}),"\n",(0,t.jsxs)(n.p,{children:["When a user receives an incoming video call request, it can be denied/rejected by the user. To deny/reject an incoming video call request, we call the ",(0,t.jsx)(n.code,{children:"deny()"})," method and pass the received ",(0,t.jsx)(n.code,{children:"peerInfo"})," data from the stream."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// aliceVideoCall.deny(peerInfo);\nawait aliceVideoCall.deny(peerInfo);\n"})}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.code,{children:"peerInfo"})})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"object"})}),(0,t.jsx)(n.td,{children:"PeerInfo Object received from the stream event in the Push Stream."})]})})]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["When a user denies/rejects an incoming video call request, on the call intiator's end, the stream emits ",(0,t.jsx)(n.code,{children:"DenyVideo"})," event. We can use this event to intimate the initiator that the video call was rejected."]})}),"\n",(0,t.jsxs)(n.h3,{id:"understanding-the-peerinfo-object",children:["Understanding the ",(0,t.jsx)(n.code,{children:"peerInfo"})," object"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"peerInfo"})," object received in the stream event basically contains the address of the caller and the signal data required to establish a video call."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'{\n "peerInfo":{\n    "address":"0x...", // Address of the caller (initiator)\n    "signal":"...", // Signal data required to establish a video call\n    "meta":{\n      "rules":{\n        "access":{\n          "type": "PUSH_CHAT",\n          "data":{\n            "chatId": "...", // ChatId between the caller and the callee\n          }\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{})})]})}function h(e={}){const{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(r,{...e})}):r(e)}},511151:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>l});var t=i(667294);const d={},o=t.createContext(d);function l(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);