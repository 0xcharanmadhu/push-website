"use strict";(self.webpackChunkpush_website=self.webpackChunkpush_website||[]).push([[61792],{100588:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>r,contentTitle:()=>n,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var s=t(785893),d=t(511151);t(23734);const o={id:"docs-video-develop-request-a-video-call",title:"Request a Video Call",hide_title:!0,slug:"./request-a-video-call",displayed_sidebar:"pushVideoSidebar",sidebar_position:5,image:"/assets/docs/previews/docs_video_develop--request_a_video_call.png"},n="Requesting a video call",l={id:"video/build/docs-video-develop-request-a-video-call",title:"Request a Video Call",description:"This section covers everything you need to do to request video calls.",source:"@site/docs/video/01-build/05-Develop-Request-a-Video-Call.mdx",sourceDirName:"video/01-build",slug:"/video/build/request-a-video-call",permalink:"/docs/video/build/request-a-video-call",draft:!1,unlisted:!1,editUrl:"https://github.com/ethereum-push-notification-service/push-website/blob/main/docs/video/01-build/05-Develop-Request-a-Video-Call.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"docs-video-develop-request-a-video-call",title:"Request a Video Call",hide_title:!0,slug:"./request-a-video-call",displayed_sidebar:"pushVideoSidebar",sidebar_position:5,image:"/assets/docs/previews/docs_video_develop--request_a_video_call.png"},sidebar:"pushVideoSidebar",previous:{title:"Initializing Video API",permalink:"/docs/video/build/initializing-video-api"},next:{title:"Handle Incoming Video Call",permalink:"/docs/video/build/handle-incoming-video-call"}},r={},a=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Fire a Request for a Video Call",id:"fire-a-request-for-a-video-call",level:2}];function c(e){const i={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.a)(),...e.components},{Head:t}=i;return t||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h1,{id:"requesting-a-video-call",children:"Requesting a video call"}),"\n",(0,s.jsx)(i.p,{children:"This section covers everything you need to do to request video calls."}),"\n",(0,s.jsx)(t,{children:(0,s.jsx)("title",{children:"Request a Video Call | Push Video | Push Documentation"})}),"\n","\n","\n",(0,s.jsx)(i.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Before we can make a video call request, we need to have initialized Push Video API. Please refer to the ",(0,s.jsx)(i.a,{href:"docs/video/build/initialize-user",children:"Initializing Video API"})," section for more details."]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"fire-a-request-for-a-video-call",children:"Fire a Request for a Video Call"}),"\n",(0,s.jsx)(i.p,{children:"We are now ready to request/initiate a video call. As the name suggests, this will be done on the initiator's end."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-typescript",children:"// aliceVideoCall.request(recipients[], options?);\nawait aliceVideoCall.request([recipient]);\n"})}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Property"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Type"}),(0,s.jsx)(i.th,{children:"Description"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.em,{children:(0,s.jsx)(i.code,{children:"recipients"})})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string[]"})}),(0,s.jsx)(i.td,{children:"-"}),(0,s.jsx)(i.td,{children:"Wallet address or addresses of the recipient(s)"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"options?"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"options.rules.access.type"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsxs)(i.td,{children:["Identifier for Push Video or Space. We use ",(0,s.jsx)(i.code,{children:"VIDEO_NOTIFICATION_ACCESS_TYPE.PUSH_CHAT"})," from ",(0,s.jsx)(i.code,{children:"@pushprotocol/restapi"})," here for Push Video"]})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"options.rules.access.data.chatId?"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"string"})}),(0,s.jsx)(i.td,{children:"Unique identifier for every push chat, here, the one between the alice and the bob"})]})]})]}),"\n",(0,s.jsx)(i.admonition,{type:"info",children:(0,s.jsxs)(i.p,{children:["On the recipient's end, the Push Stream will emit an ",(0,s.jsx)(i.code,{children:"RequestVideo"})," event. This event can be used to show some UI modal on the recipient side to accept/deny the call and will contain the initiator's address, signal data and other details required to establish the call."]})})]})}function h(e={}){const{wrapper:i}={...(0,d.a)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},511151:(e,i,t)=>{t.d(i,{Z:()=>l,a:()=>n});var s=t(667294);const d={},o=s.createContext(d);function n(e){const i=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:n(e.components),s.createElement(o.Provider,{value:i},e.children)}}}]);